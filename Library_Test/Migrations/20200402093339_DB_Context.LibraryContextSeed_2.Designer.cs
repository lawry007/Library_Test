// <auto-generated />
using System;
using Library_Test.DB_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library_Test.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20200402093339_DB_Context.LibraryContextSeed_2")]
    partial class DB_ContextLibraryContextSeed_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library_Test.Entities.Books", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvailabilityStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("CoverPrice")
                        .HasColumnType("money");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("PublishYear")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("BookId");

                    b.ToTable("Books","dbo");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("005873f6-f02f-4ab2-951f-6209a5639a52"),
                            AvailabilityStatus = "check-in",
                            CoverPrice = 1800.00m,
                            Isbn = "1234-PPL-HS",
                            PublishYear = "2020",
                            Title = "Being a great Staff of Health Station"
                        },
                        new
                        {
                            BookId = new Guid("0375286f-f10b-4119-bd5c-77eb880aae78"),
                            AvailabilityStatus = "check-Out",
                            CoverPrice = 1800.00m,
                            Isbn = "13454-PPL-HS",
                            PublishYear = "2020",
                            Title = "INterview 101"
                        });
                });

            modelBuilder.Entity("Library_Test.Entities.Users", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BookId");

                    b.Property<DateTime>("DateOfCheckout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("ExpectedDateOfReturn")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NationalIdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("Users","dbo");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("6a441cbc-ab57-4e57-9382-707ce8ec86d6"),
                            BookId = new Guid("54e6c636-55f6-4176-97ca-60cb32e8ed8e"),
                            DateOfCheckout = new DateTime(2020, 4, 2, 10, 33, 38, 571, DateTimeKind.Local).AddTicks(2622),
                            Email = "lawrenceolaoluwa1@gmail.com",
                            ExpectedDateOfReturn = new DateTime(2020, 4, 16, 10, 33, 38, 583, DateTimeKind.Local).AddTicks(5649),
                            FullName = "Lawrence Olaoluwa",
                            NationalIdentificationNumber = "12345678",
                            PhoneNumber = "08161813410"
                        },
                        new
                        {
                            UserId = new Guid("2773e6dc-b39d-4168-afce-7fd066ef8841"),
                            BookId = new Guid("54e6c636-55f6-4176-97ca-60cb32e8ed8e"),
                            DateOfCheckout = new DateTime(2020, 4, 2, 10, 33, 38, 584, DateTimeKind.Local).AddTicks(435),
                            Email = "lawrenceolaolaoluwa@outlook.com",
                            ExpectedDateOfReturn = new DateTime(2020, 4, 16, 10, 33, 38, 584, DateTimeKind.Local).AddTicks(450),
                            FullName = "Joseph Olaoluwa",
                            NationalIdentificationNumber = "123",
                            PhoneNumber = "12345678980"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
